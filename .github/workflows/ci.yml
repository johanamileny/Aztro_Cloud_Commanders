name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['9.0.x']
    
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydb
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DOTNET_VERSION: ${{ matrix.dotnet-version }}
      ConnectionStrings__DefaultConnection: Host=localhost;Port=5432;Username=postgres;Password=password;Database=mydb
      JWT_KEY: newKeyValueForSecurity
      JWT_ISSUER: newIssuerValue
      JWT_AUDIENCE: newAudienceValue
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install dependencies
        working-directory: ./api
        run: dotnet restore

      - name: Install EF Core CLI
        run: dotnet tool install --global dotnet-ef
        shell: bash
        env:
          DOTNET_ROOT: ${{ github.workspace }}/.dotnet
          
      - name: Run database migrations
        working-directory: ./api
        run: dotnet ef database update
        env:
          ConnectionStrings__DefaultConnection: Host=localhost;Port=5432;Username=postgres;Password=password;Database=mydb

      - name: Build
        working-directory: ./api
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        working-directory: ./api
        run: dotnet test --no-build --verbosity normal

  frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21, 22, 23]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: ./web
        run: npm install

      - name: Run tests
        working-directory: ./web
        run: npm test

      - name: Build
        working-directory: ./web
        run: npm run build